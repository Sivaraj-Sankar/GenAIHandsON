Ai Agent Automation - No Need of Condition and Complex Edge Cases 
AI Agentic Desgin Pattern 
-------------------------
Pattern 1 - AI Agent will wait for Other AI Agent 
          - Delegate[Manager Agent, Orchestration Agent] the Task to other AI Agent 
          - Hierarchical Agent 
          - Workflow Agent 
Pattern 2 - ReAct Agent - Reflecting - Acting 
Pattern 3 - Perform series, in parallel, and hierarchically

Cooperation
Guardrails
Focus
Tools
Memory
Role-Play 




AI Agentic Types 
----------------
Workflow Pattern 
Autonomous Decision Making Pattern - with Tool Use
Personal Assistant Pattern - AI Assistant 
Real Person Memory Managing work async Pattern - and also send the work to other AI Agents 


AutoGen 
AutoGen framework to build multi-agent systems with diverse **roles and **capabilities for implementing complex AI applications.
**Reflection, Tool use, Planning, and Multi-agent collaboration using AutoGen.


AutoGen Agents Design Pattern 
ConversableAgent - Two Agent Chat 
sequence of chats between agents[multi-agent collaboration design pattern.] - Fun Collaboration customer onboarding 
A high-quality blog post by using the agent reflection framework. You’ll use the **“nested chat” structure to develop a system where reviewer agents, nested within a critic agent, reflect on the blog post written by another agent.
      critic agent 
          reviewer agent 
tool use design pattern - Agent 
Agents with coding capabilities to complete a financial analysis task. You’ll create two systems where agents collaborate and seek human feedback. The first system will generate code from scratch using an LLM, and the second will use user-provided code
A custom group chat with multiple agents that collaborate to generate a detailed stock performance report, incorporating a planning agent and customizing how the conversation flows between different agents.


1) Conversable Agent - Two Standup Comedian 
2) Multi Agent Collaboration - Sequence Chat - Craft the Task for sequential chat - to finish sequential dependent task 
3) Reflection Agent Pattern - Nested Agent Design Pattern - chat or sequence of chat nested within another chat - as in monologue of agent 
             - nested chat conversation pattern to realize the sophisticated reflection pattern 
             - where a set of reviewer agent nested within in the critique agent as in the monologue to reflect on the blog post by a writer agent 
     **Model Based Assistant as writier 
     **use the sequential conversation pattern to construct a series of chat b/w critic and reviewers
    Each Reviewer sending the review to the critic, how critic getting and calling the other reviewer agent,? 
    and also finally meta reviewer getting the json output of all the reviewer first by critic , and aggregate the review and sending it to the critic 
4) Coding Agent  - seek human feedback - feeback loop getting from human 
5) Tool Use Agent - Chess Agent 
6) Custom Group Agent with multiple agents - customizing the conversational flow between different agents 
          Best Practices for Multi-Agent Group Chat 
  This Complex Task Requried Planning 
           Agent have to think, what sequence of task have to take 
            getting data, 
            analyzing  
            writing 
            revising 

Another interaction pattern - **Nested Chat - Which means when agent given a task and it calls bunch of other agents and iterates with them for a while before it returns the result 
  Blog Post Agent
  Chess Game 

------
Generate Reply - don't alter the internal state of the agent 
Initiate Chat - have memory state management 
Send - to re initiate the conversation


Conversation Pattern 
Agentic Design Pattern 
  


Researcher 
Data Collector 
Co-writer 
Executor 




---------------------------------****-------------------******________________________----*******
AutoGen [Description, Specific Agent, System Message]
CrewAI [specific role[act as code executor, code writer], goal[Output going to achieve], backstory for each agent]


CrewAI 
------
Multi AI Agent Systems with crewAI
**Memory: Provide agents with short-term, long-term, and shared memory
**Focus: Break down the tasks, goals, and tools and assign to multiple AI agents for better performance
**Guardrails: Effectively handle errors, hallucinations, and infinite loops
**Desgin Pattern: Cooperation: Perform tasks in series, in parallel, and hierarchically

Tailor resumes and interview prep for job applications
Research, write and edit technical articles
Automate customer support inquiries
Conduct customer outreach campaigns
Plan and execute events
Perform financial analysis

**Differentiate between tools and context in the agent is very important 
**Guardrails - for not hallunicating 
               for not stuck in the random loop 
               for not using the same tool repeatedly 
               for not taking the too long to answer the question
               ** Prevent the Agents from Derailing 
**Nudge the Agents to Stay on Track 

Fuzzy Input - Fuzzy Transformation - Fuzzy Output 
Different Ways to Give Agents Tools
Agent Level: The Agent can use the Tool(s) on any Task it performs.
Task Level: The Agent will only use the Tool(s) when performing that specific Task.
Note: Task Tools override the Agent Tools.

**Task Tool Override the Agent Tool 







AutoGen Community 
------------------
AutoGen Update [community-driven development approach - AG2]
To introduce significant architectural changes, including integration with Microsoft's broader AI ecosystem and tools like Semantic Kernel


AI Agent Definition
-------------------
AI Agent Definition 
   * Function Calling 
   * Effectively Tool Using 
   * Autonomously Making Decision 
   * Using Reasoning - Thinking - Observing - Act Over the Tool ---> Based on Environment - Perceiving 
   * Send Messages - Receive Messages - 
   * Generate Replies 
   * Interact with Other Agents
   * Perform Actions
   * Keeping the Human in the Loop 
   * stopping the response
   * Ask for human input before it generating the reply by LLM
   * Memory - Long Term, Short Term, Shared Memory 


Done
-----
FINRA
Decorator  - Done
Binary Search, Linear Search - Done
ReRank Model Name - Check the Llamaindex - Done
Embedding Model Name and size - done
Reasoning Model is working - Done
OOps Concept Brushup - Done 
LLM Architecture Brushup  - Done
Resume Quick Review  - Done








